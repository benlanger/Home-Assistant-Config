- id: '1691007313405'
  alias: Assist Play Media
  description: ''
  trigger:
  - platform: conversation
    command:
    - play the artist {artist}
    - play some {artist}
  condition: []
  action:
  - service: mass.search
    data:
      limit: 1
      media_type:
      - artist
      name: '{{ trigger.slots.artist  }}'
    response_variable: found_artist
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: artist
      enqueue: replace
      media_id: '{{ found_artist.artists.0.name }}'
  mode: single
- id: '1691088980213'
  alias: Assist Play Playlist
  description: ''
  trigger:
  - platform: conversation
    command:
    - start [the] {playlist} playlist
  condition: []
  action:
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: playlist
      enqueue: replace
      media_id: '{{ trigger.slots.playlist }}'
  mode: single
- id: '1691094215164'
  alias: 'Assist: Set Thermostats'
  description: ''
  trigger:
  - platform: conversation
    command:
    - (set|change) [the] {thermostat} (AC|thermostat) to {temperature}
  condition: []
  action:
  - service: climate.set_temperature
    data:
      temperature: '{{ trigger.slots.temperature }}'
    target:
      entity_id: climate.{{ trigger.slots.thermostat }}_ac
  mode: single
- id: '1693412216159'
  alias: Assist play specific song
  description: ''
  trigger:
  - platform: conversation
    command:
    - (start|play) [the] song {song}
  condition: []
  action:
  - service: media_player.play_media
    data:
      media_content_type: music
      media_content_id: 'plex://{ "track_name": "{{ trigger.slots.song | replace(".","")
        }}", "allow_multiple": 1 ,"library_name": "Music" }'
    target:
      entity_id: media_player.group_home_speakers
  mode: single
- id: '1698434157594'
  alias: Update Map Extractor camera
  description: ''
  use_blueprint:
    path: PiotrMachowski/update_map_extractor.yaml
    input:
      vacuum: vacuum.xiaomi_vacuum_cleaner
      camera: camera.xiaomi_cloud_map_extractor
      mode_to_handle: turn_off_when_docked
- id: '1708472009602'
  alias: Play Music when maxi awakes at home
  description: This Automation will start music on the home group when maxi awakes
  trigger:
  - platform: state
    entity_id:
    - sensor.is_maxi_asleep
    from: asleep
    to: awake
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: person.maximiliano
    state: home
  - condition: state
    entity_id: media_player.group_home_speakers
    state: 'off'
  action:
  - service: media_player.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_content_id: Maxi Music
      media_content_type: playlist
  mode: single
- id: '1708472370553'
  alias: Stop bedroom speaker when bedroom sleeper awake
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.sleeper_in_bedroom
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: media_player.media_stop
    metadata: {}
    data: {}
    target:
      entity_id: media_player.bedroom_speaker
  mode: single
- id: '1711377375732'
  alias: Assist play song next MASS
  description: ''
  trigger:
  - platform: conversation
    command:
    - queue {song} by {artist}
    - cue {song} by {artist}
  condition: []
  action:
  - service: mass.search
    data:
      limit: 1
      media_type:
      - track
      name: '{{ trigger.slots.song  }}'
      artist: '{{ trigger.slots.artist  }}'
    response_variable: found_song
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: track
      enqueue: next
      media_id: '{{ found_song.tracks.0.name }}'
      artist: '{{ trigger.slots.artist  }}'
  mode: single
- id: '1711377604136'
  alias: Assist Play song by artist now
  description: ''
  trigger:
  - platform: conversation
    command:
    - play {song} by {artist}
  condition: []
  action:
  - service: mass.search
    data:
      limit: 1
      media_type:
      - track
      name: '{{ trigger.slots.song  }}'
      artist: '{{ trigger.slots.artist  }}'
    response_variable: found_song
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: track
      enqueue: play
      media_id: '{{ found_song.tracks.0.name }}'
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: track
      enqueue: add
      media_id: '{{ found_song.tracks.0.name }}'
      radio_mode: true
  mode: single
- id: '1711565389493'
  alias: Assist Restart Music Assistant
  description: ''
  trigger:
  - platform: conversation
    command: Restart Music Assistant
  condition: []
  action:
  - service: hassio.addon_restart
    metadata: {}
    data:
      addon: d5369777_music_assistant_beta
  mode: single
- id: '1711576326986'
  alias: Assist play music (default)
  description: ''
  trigger:
  - platform: conversation
    command:
    - play music
  condition: []
  action:
  - service: mass.play_media
    target:
      entity_id: media_player.mass_home_group
    data:
      media_type: playlist
      enqueue: replace
      media_id: maxi music
  mode: single
- id: '1713377627308'
  alias: Mute Speakers in the office when computer mic is in use
  description: ''
  trigger:
  - type: turned_on
    platform: device
    device_id: 0cc46b896079dbc299255330f9ea856e
    entity_id: 470a4142c11434774d1b570a456f145b
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.universal_office_speakers
      state: 'off'
  action:
  - service: media_player.volume_mute
    metadata: {}
    data:
      is_volume_muted: true
    target:
      entity_id: media_player.universal_office_speakers
  mode: single
- id: '1713377704036'
  alias: Unmute Speakers in the office when computer mic goes off
  description: ''
  trigger:
  - type: turned_off
    platform: device
    device_id: 0cc46b896079dbc299255330f9ea856e
    entity_id: 470a4142c11434774d1b570a456f145b
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.universal_office_speakers
      state: 'off'
  action:
  - service: media_player.volume_mute
    metadata: {}
    data:
      is_volume_muted: false
    target:
      entity_id: media_player.universal_office_speakers
  mode: single
- id: '1713378517441'
  alias: Lock front door when it is closed for 5 seconds
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.sensor_front_outside_door_contact
    from:
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: lock.lock_front_door
      state: locked
  action:
  - service: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.lock_front_door
  mode: single
- id: '1713378679048'
  alias: Lock front door 5 mintuesa after unlocking
  description: ''
  trigger:
  - platform: state
    entity_id:
    - lock.lock_front_door
    to: unlocked
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.sensor_front_outside_door_contact
    state: 'off'
  action:
  - service: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.lock_front_door
  mode: single
- id: '1713378916074'
  alias: Alert that the front door remained open
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.sensor_front_door_contact
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.aerating_appartment
    state: 'off'
  action:
  - service: script.broadcast_alert_in_the_house
    metadata: {}
    data:
      message: Entrance door is open
      color: blue
  mode: restart
- id: '1713399927983'
  alias: Alert that the vacuum is stuck
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.xiaomi_vacuum_cleaner
    to: error
  condition: []
  action:
  - repeat:
      sequence:
      - service: script.broadcast_alert_in_the_house
        metadata: {}
        data:
          message: Vacuum Stuck
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: vacuum.xiaomi_vacuum_cleaner
          state: error
  mode: single
