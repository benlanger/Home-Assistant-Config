[
  {
    "id": "61f53235c712b2c2",
    "type": "subflow",
    "name": "Dial Subflow",
    "info": "",
    "category": "",
    "in": [
      {
        "x": 20,
        "y": 1760,
        "wires": [
          {
            "id": "d50c859d07692e50"
          }
        ]
      }
    ],
    "out": [],
    "env": [],
    "meta": {},
    "color": "#DDAA99"
  },
  {
    "id": "82192b37abcc4854",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1020,
    "y": 1780,
    "wires": [
      [
        "697afaa0745ef2cf"
      ]
    ]
  },
  {
    "id": "985a99418a6a34d8",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1160,
    "y": 1740,
    "wires": [
      [
        "d27830fb5c6874f8"
      ]
    ]
  },
  {
    "id": "d27830fb5c6874f8",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1320,
    "y": 1760,
    "wires": [
      [
        "23db831f71fb38a9"
      ]
    ]
  },
  {
    "id": "645eaecd29665487",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1020,
    "y": 1860,
    "wires": [
      [
        "9d53d8bd58c36ae9"
      ]
    ]
  },
  {
    "id": "45e7615f1c4e98d2",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1000,
    "y": 1820,
    "wires": [
      [
        "c7f8c03f4e7f1a1c"
      ]
    ]
  },
  {
    "id": "b00632a9d37853c4",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1260,
    "y": 1820,
    "wires": [
      [
        "66bd23e455ac06d5"
      ]
    ]
  },
  {
    "id": "4ab99af8e3afe60d",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1620,
    "y": 1860,
    "wires": [
      [
        "8ba7a0ebb6af727d"
      ]
    ]
  },
  {
    "id": "9d53d8bd58c36ae9",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1260,
    "y": 1860,
    "wires": [
      [
        "b88d2595c62a74bb"
      ]
    ]
  },
  {
    "id": "2df99d0cff89b14c",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1520,
    "y": 1860,
    "wires": [
      [
        "4ab99af8e3afe60d"
      ]
    ]
  },
  {
    "id": "21c70b070ae3c784",
    "type": "junction",
    "z": "61f53235c712b2c2",
    "x": 1940,
    "y": 1760,
    "wires": [
      [
        "0e8c29a971f690ca"
      ]
    ]
  },
  {
    "id": "d50c859d07692e50",
    "type": "function",
    "z": "61f53235c712b2c2",
    "name": "Extract room from dial mqtt name and set regex to find chromecast playing",
    "func": "var friendlyName = msg.payload.device.friendlyName; // Extract dial name\nvar room = friendlyName.replace(\"remote_\", \"\").replace(\"_dial\", \"\"); // Extract room from the name\n\n// This statement is used to allow for sub-locations in a room while controling the main room.\n// I.e: remote_livingroom_library_dial. \nif (!room.includes('hotbox')) { // Continue if the room does not containt \"hotbox\"\n    var roomtemp = room.split(\"_\"); // This is due to hotbox having two real variations of room\n    var roomfinal = roomtemp[0];\n} else {\n\n    var roomfinal = room;\n\n}\n\n\nvar action = msg.payload.action;\n\nconst rules_object = [{ 'property': 'entity_id', 'logic': 'is', 'value': \"media_player.\" + room + \"_chromecast\", 'valueType': 're' }, { 'property': 'state', 'logic': 'is', 'value': \"playing\", 'valueType': 'str' }];// arranges the array \n\nvar msg = {\n    \"payload\": { \"rules\": rules_object },\n    \"action\": action,\n    \"room\": roomfinal\n\n}\nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 360,
    "y": 1760,
    "wires": [
      [
        "00bcec74e6a8608c"
      ]
    ]
  },
  {
    "id": "00bcec74e6a8608c",
    "type": "ha-get-entities",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 0,
    "rules": [],
    "output_type": "array",
    "output_empty_results": true,
    "output_location_type": "msg",
    "output_location": "payload",
    "output_results_count": 1,
    "x": 710,
    "y": 1760,
    "wires": [
      [
        "37f2592b86cd8d0c"
      ]
    ]
  },
  {
    "id": "37f2592b86cd8d0c",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "Device present?",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "nempty"
      },
      {
        "t": "empty"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 880,
    "y": 1760,
    "wires": [
      [
        "1d3f0314994a9da9"
      ],
      [
        "82192b37abcc4854"
      ]
    ]
  },
  {
    "id": "1d3f0314994a9da9",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "muted?",
    "property": "payload[0].attributes.is_volume_muted",
    "propertyType": "msg",
    "rules": [
      {
        "t": "false"
      },
      {
        "t": "true"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1060,
    "y": 1740,
    "wires": [
      [
        "985a99418a6a34d8"
      ],
      [
        "82192b37abcc4854"
      ]
    ]
  },
  {
    "id": "697afaa0745ef2cf",
    "type": "function",
    "z": "61f53235c712b2c2",
    "name": "Extract room from dial mqtt name and set regex to find speaker playing",
    "func": "\nvar room = msg.room\nvar action = msg.action\n\nconst rules_object = [{ 'property': 'entity_id' ,  'logic': 'is' , 'value': \"media_player.\" + room + \".*_speaker\" ,  'valueType': 're' },{ 'property': 'state' ,  'logic': 'is_not' , 'value': \"off\" ,  'valueType': 'str' }];// arranges the array \n\nvar msg = {\n    \"payload\":{ \"rules\": rules_object},\n     \"action\": action,\n     \"room\": room\n\n}\nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 1820,
    "wires": [
      [
        "411cea78bfbf43c6"
      ]
    ]
  },
  {
    "id": "411cea78bfbf43c6",
    "type": "ha-get-entities",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 0,
    "rules": [],
    "output_type": "array",
    "output_empty_results": true,
    "output_location_type": "msg",
    "output_location": "payload",
    "output_results_count": 1,
    "x": 710,
    "y": 1820,
    "wires": [
      [
        "faf1148d7535690a"
      ]
    ]
  },
  {
    "id": "23db831f71fb38a9",
    "type": "split",
    "z": "61f53235c712b2c2",
    "name": "Split entities",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "x": 1430,
    "y": 1760,
    "wires": [
      [
        "80f93e25dae94b3b"
      ]
    ]
  },
  {
    "id": "faf1148d7535690a",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "Device present?",
    "property": "payload",
    "propertyType": "msg",
    "rules": [
      {
        "t": "nempty"
      },
      {
        "t": "empty"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 880,
    "y": 1820,
    "wires": [
      [
        "45e7615f1c4e98d2"
      ],
      [
        "645eaecd29665487"
      ]
    ]
  },
  {
    "id": "66bd23e455ac06d5",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "muted?",
    "property": "payload[0].attributes.is_volume_muted",
    "propertyType": "msg",
    "rules": [
      {
        "t": "false"
      },
      {
        "t": "true"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 1520,
    "y": 1820,
    "wires": [
      [
        "23db831f71fb38a9"
      ],
      [
        "4ab99af8e3afe60d"
      ]
    ]
  },
  {
    "id": "80f93e25dae94b3b",
    "type": "change",
    "z": "61f53235c712b2c2",
    "name": "set entity data",
    "rules": [
      {
        "t": "set",
        "p": "payload.data.entity_id",
        "pt": "msg",
        "to": "payload.entity_id",
        "tot": "msg",
        "dc": true
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 1620,
    "y": 1760,
    "wires": [
      [
        "806e3b9d9faad10c"
      ]
    ]
  },
  {
    "id": "b88d2595c62a74bb",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "Play_Pause action?",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "play_pause",
        "vt": "str"
      },
      {
        "t": "nnull"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 1380,
    "y": 1860,
    "wires": [
      [
        "2df99d0cff89b14c"
      ],
      [
        "2df99d0cff89b14c"
      ]
    ]
  },
  {
    "id": "806e3b9d9faad10c",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "Light mode off?",
    "property": "lightmode",
    "propertyType": "flow",
    "rules": [
      {
        "t": "neq",
        "v": "1",
        "vt": "num"
      },
      {
        "t": "null"
      },
      {
        "t": "eq",
        "v": "1",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 3,
    "x": 1800,
    "y": 1760,
    "wires": [
      [
        "21c70b070ae3c784"
      ],
      [
        "21c70b070ae3c784"
      ],
      [
        "8ba7a0ebb6af727d"
      ]
    ]
  },
  {
    "id": "c7f8c03f4e7f1a1c",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "paused?",
    "property": "payload[0].state",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "playing",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "paused",
        "vt": "str"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 2,
    "x": 1160,
    "y": 1820,
    "wires": [
      [
        "b00632a9d37853c4"
      ],
      [
        "9d53d8bd58c36ae9"
      ]
    ]
  },
  {
    "id": "8ba7a0ebb6af727d",
    "type": "trigger",
    "z": "61f53235c712b2c2",
    "name": "",
    "op1": "",
    "op2": "",
    "op1type": "pay",
    "op2type": "nul",
    "duration": "100",
    "extend": false,
    "overrideDelay": false,
    "units": "ms",
    "reset": "",
    "bytopic": "all",
    "topic": "topic",
    "outputs": 1,
    "x": 2020,
    "y": 1860,
    "wires": [
      [
        "5aeb80d3605ce6ee"
      ]
    ]
  },
  {
    "id": "5aeb80d3605ce6ee",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "neq",
        "v": "",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "x": 2170,
    "y": 1860,
    "wires": [
      [
        "27a437252540a153"
      ]
    ]
  },
  {
    "id": "0e8c29a971f690ca",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "rotate_right",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "play_pause",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "rotate_left",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "skip_forward",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "skip_backward",
        "vt": "str"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 5,
    "x": 2030,
    "y": 1760,
    "wires": [
      [
        "4424801d977abd4e"
      ],
      [
        "af1c3efc9e357f15"
      ],
      [
        "c98edceffd1f5956"
      ],
      [
        "a1f2dbb312f8c0d5"
      ],
      [
        "7f8686ac5272a336"
      ]
    ]
  },
  {
    "id": "27a437252540a153",
    "type": "function",
    "z": "61f53235c712b2c2",
    "name": "Extract room from dial mqtt name and set regex to find light groups",
    "func": "\nvar room = msg.room;\nvar action = msg.action\n\nconst rules_object = [{ 'property': 'entity_id' ,  'logic': 'is' , 'value': \"light.group_\" + room + \"_lights\" ,  'valueType': 're' }];// arranges the array \n\nvar msg = {\n    \"payload\":{ \"rules\": rules_object},\n     \"action\": action,\n     \"room\": room\n\n}\nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 2480,
    "y": 1860,
    "wires": [
      [
        "27cf2b308e923713"
      ]
    ]
  },
  {
    "id": "4424801d977abd4e",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "media_player",
    "service": "volume_up",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 2250,
    "y": 1640,
    "wires": [
      []
    ]
  },
  {
    "id": "af1c3efc9e357f15",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "media_player",
    "service": "media_play_pause",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 2290,
    "y": 1680,
    "wires": [
      []
    ]
  },
  {
    "id": "c98edceffd1f5956",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "media_player",
    "service": "volume_down",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 2280,
    "y": 1720,
    "wires": [
      []
    ]
  },
  {
    "id": "a1f2dbb312f8c0d5",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "media_player",
    "service": "media_next_track",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 2310,
    "y": 1760,
    "wires": [
      []
    ]
  },
  {
    "id": "7f8686ac5272a336",
    "type": "change",
    "z": "61f53235c712b2c2",
    "name": "set flow light mode = 1",
    "rules": [
      {
        "t": "set",
        "p": "lightmode",
        "pt": "flow",
        "to": "1",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 2220,
    "y": 1800,
    "wires": [
      [
        "816ee8a2d7efb417"
      ]
    ]
  },
  {
    "id": "27cf2b308e923713",
    "type": "ha-get-entities",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 0,
    "rules": [],
    "output_type": "array",
    "output_empty_results": true,
    "output_location_type": "msg",
    "output_location": "payload",
    "output_results_count": 1,
    "x": 2830,
    "y": 1860,
    "wires": [
      [
        "cb2f053ba723116e"
      ]
    ]
  },
  {
    "id": "816ee8a2d7efb417",
    "type": "trigger",
    "z": "61f53235c712b2c2",
    "name": "",
    "op1": "",
    "op2": "0",
    "op1type": "nul",
    "op2type": "str",
    "duration": "10",
    "extend": false,
    "overrideDelay": false,
    "units": "s",
    "reset": "",
    "bytopic": "all",
    "topic": "topic",
    "outputs": 1,
    "x": 2430,
    "y": 1800,
    "wires": [
      [
        "9854703ac26fa0bd"
      ]
    ]
  },
  {
    "id": "cb2f053ba723116e",
    "type": "split",
    "z": "61f53235c712b2c2",
    "name": "Split entities",
    "splt": "\\n",
    "spltType": "str",
    "arraySplt": 1,
    "arraySpltType": "len",
    "stream": false,
    "addname": "",
    "x": 3010,
    "y": 1860,
    "wires": [
      [
        "40c07034a2af8e39",
        "bf76484668438f0e"
      ]
    ]
  },
  {
    "id": "9854703ac26fa0bd",
    "type": "change",
    "z": "61f53235c712b2c2",
    "name": "set flow light mode = 0",
    "rules": [
      {
        "t": "set",
        "p": "lightmode",
        "pt": "flow",
        "to": "0",
        "tot": "num"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 2640,
    "y": 1800,
    "wires": [
      []
    ]
  },
  {
    "id": "40c07034a2af8e39",
    "type": "change",
    "z": "61f53235c712b2c2",
    "name": "set entity data",
    "rules": [
      {
        "t": "set",
        "p": "payload.data.entity_id",
        "pt": "msg",
        "to": "payload.entity_id",
        "tot": "msg",
        "dc": true
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 3200,
    "y": 1860,
    "wires": [
      [
        "35eded21f6831c88",
        "8a15fec47048385f"
      ]
    ]
  },
  {
    "id": "35eded21f6831c88",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "rotate_right",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "rotate_left",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "play_pause",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "skip_forward",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "skip_backward",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 5,
    "x": 3350,
    "y": 1860,
    "wires": [
      [
        "d56f1d268cdd4ed3"
      ],
      [
        "d174cd53af839e44"
      ],
      [
        "da6e3b258224e935",
        "8a15fec47048385f"
      ],
      [
        "cee47118121c3fef"
      ],
      []
    ]
  },
  {
    "id": "d56f1d268cdd4ed3",
    "type": "function",
    "z": "61f53235c712b2c2",
    "name": "Extract room from motion sensor entity an extract off lights to regex",
    "func": "var room = msg.room;\n\n\nconst rules_object = [{ 'property': 'entity_id' ,  'logic': 'is' , 'value': \"light.\" + room ,  'valueType': 're' }];// arranges the array \n\nvar msg = {\n    \"payload\":{ \"rules\": rules_object}\n\n}\nreturn msg;\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 3680,
    "y": 1800,
    "wires": [
      [
        "bce46683bf6a0688",
        "25adb9358a07e767"
      ]
    ]
  },
  {
    "id": "d174cd53af839e44",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "Dim light",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "light",
    "service": "turn_on",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "{\"brightness_step_pct\": -10}",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 3500,
    "y": 1840,
    "wires": [
      []
    ]
  },
  {
    "id": "da6e3b258224e935",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "light",
    "service": "toggle",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 3520,
    "y": 1880,
    "wires": [
      []
    ]
  },
  {
    "id": "cee47118121c3fef",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "Max white brightness",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "light",
    "service": "turn_on",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "{\"brightness_pct\": 100,\"color_name\": \"white\"}",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 3540,
    "y": 1920,
    "wires": [
      []
    ]
  },
  {
    "id": "bce46683bf6a0688",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "debug 129",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 4080,
    "y": 1840,
    "wires": []
  },
  {
    "id": "25adb9358a07e767",
    "type": "ha-get-entities",
    "z": "61f53235c712b2c2",
    "name": "",
    "server": "7ab5c227.a3ce8c",
    "version": 0,
    "rules": [
      {
        "property": "",
        "logic": "is",
        "value": "",
        "valueType": "str"
      }
    ],
    "output_type": "split",
    "output_empty_results": false,
    "output_location_type": "msg",
    "output_location": "payload",
    "output_results_count": 1,
    "x": 4090,
    "y": 1780,
    "wires": [
      [
        "eea455aff3d14d56",
        "dd0d9bc4533a2076"
      ]
    ]
  },
  {
    "id": "eea455aff3d14d56",
    "type": "trigger",
    "z": "61f53235c712b2c2",
    "name": "",
    "op1": "",
    "op2": "",
    "op1type": "pay",
    "op2type": "nul",
    "duration": "600",
    "extend": false,
    "overrideDelay": false,
    "units": "ms",
    "reset": "",
    "bytopic": "topic",
    "topic": "payload.entity_id",
    "outputs": 1,
    "x": 4320,
    "y": 1800,
    "wires": [
      [
        "9bf93457728ad597"
      ]
    ]
  },
  {
    "id": "dd0d9bc4533a2076",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "debug 130",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 4320,
    "y": 1840,
    "wires": []
  },
  {
    "id": "9bf93457728ad597",
    "type": "switch",
    "z": "61f53235c712b2c2",
    "name": "Brightness?",
    "property": "payload.attributes.brightness",
    "propertyType": "msg",
    "rules": [
      {
        "t": "null"
      },
      {
        "t": "lt",
        "v": "250",
        "vt": "str"
      },
      {
        "t": "gte",
        "v": "250",
        "vt": "str"
      }
    ],
    "checkall": "false",
    "repair": false,
    "outputs": 3,
    "x": 4510,
    "y": 1800,
    "wires": [
      [
        "96da2312a19b24b4"
      ],
      [
        "96da2312a19b24b4"
      ],
      [
        "1e30b4233afd16d2",
        "7997e2085f42d86d"
      ]
    ]
  },
  {
    "id": "96da2312a19b24b4",
    "type": "change",
    "z": "61f53235c712b2c2",
    "name": "set entity",
    "rules": [
      {
        "t": "set",
        "p": "payload.data.entity_id",
        "pt": "msg",
        "to": "payload.entity_id",
        "tot": "msg",
        "dc": true
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 4680,
    "y": 1800,
    "wires": [
      [
        "69bee88c57b950a2"
      ]
    ]
  },
  {
    "id": "1e30b4233afd16d2",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "debug 131",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 4680,
    "y": 1840,
    "wires": []
  },
  {
    "id": "7997e2085f42d86d",
    "type": "function",
    "z": "61f53235c712b2c2",
    "name": "White addist",
    "func": "// Declare variation\nvar saturation = msg.payload.attributes.hs_color[1];\nvar colorfinal = msg.payload.attributes.hs_color[0];\nvar entity_id = msg.payload.entity_id;\n\n// If saturation is over 10\nif(saturation > 10){\nvar saturationlesser = saturation - 10;\n} else if(saturation < 10){// If saturation is under 10\nvar saturationlesser = 0;\nvar colorfinal = 0;\n}\n else {\nvar saturationlesser = saturation;}\n\n\n\n\n\n\nvar newMsg = {\n    \"payload\": {\n            \"data\": {\n            \"hs_color\": [colorfinal, saturationlesser],\n            \"entity_id\": entity_id\n            }\n            }\n            \n   }\n\nreturn newMsg;\n\n\n",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 4690,
    "y": 1880,
    "wires": [
      [
        "d01b9290923b5955",
        "3c10261e713e31a8"
      ]
    ]
  },
  {
    "id": "69bee88c57b950a2",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "Brightnen light",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "light",
    "service": "turn_on",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "{\"brightness_step_pct\": 10}",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 4920,
    "y": 1800,
    "wires": [
      []
    ]
  },
  {
    "id": "d01b9290923b5955",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "debug 132",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 4900,
    "y": 1840,
    "wires": []
  },
  {
    "id": "3c10261e713e31a8",
    "type": "api-call-service",
    "z": "61f53235c712b2c2",
    "name": "Add white",
    "server": "7ab5c227.a3ce8c",
    "version": 5,
    "debugenabled": false,
    "domain": "light",
    "service": "turn_on",
    "areaId": [],
    "deviceId": [],
    "entityId": [],
    "data": "",
    "dataType": "jsonata",
    "mergeContext": "",
    "mustacheAltTags": false,
    "outputProperties": [],
    "queue": "none",
    "x": 4900,
    "y": 1880,
    "wires": [
      []
    ]
  },
  {
    "id": "44f221cfd84fa705",
    "type": "trigger",
    "z": "61f53235c712b2c2",
    "name": "",
    "op1": "",
    "op2": "",
    "op1type": "pay",
    "op2type": "nul",
    "duration": "200",
    "extend": false,
    "overrideDelay": false,
    "units": "ms",
    "reset": "",
    "bytopic": "topic",
    "topic": "topic",
    "outputs": 1,
    "x": 2060,
    "y": 1600,
    "wires": [
      [
        "4424801d977abd4e"
      ]
    ]
  },
  {
    "id": "bf76484668438f0e",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "split entity",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "statusVal": "",
    "statusType": "auto",
    "x": 3200,
    "y": 1760,
    "wires": []
  },
  {
    "id": "8a15fec47048385f",
    "type": "debug",
    "z": "61f53235c712b2c2",
    "name": "debug 152",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 3530,
    "y": 2000,
    "wires": []
  }
]