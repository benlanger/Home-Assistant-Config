  - binary_sensor:
      - name: "All Present Sleeping"
        delay_off:
          minutes: 7
        state: >
          {% if ((is_state('person.maximiliano', 'home') and is_state('binary_sensor.maxi_sleeping', 'on' ) ) or not is_state('person.maximiliano', 'home' ))  %}on{% else  %}off{% endif %}
      - name: "Sensor Patio Occupancy" 
        delay_off:
          minutes: 7
        state: >
         {{ not is_state('sensor.patio_camera_person_count', "0")
             or not is_state('binary_sensor.sensor_patio_motion_occupancy', 'off')
             or not is_state('binary_sensor.sensor_patio_ceiling_motion_occupancy', 'off')
             }}
      - name: "Maxi's ears busy"
        unique_id: "maxisearsbusy" 
        state: >
         {{ (not is_state('sensor.currentgamemaxi', "idle") and is_state('sensor.maxi_location', "office" ))
             or (is_state('media_player.maxi_pc_mediaplayer', 'playing') and ("chrome" in "sensor.maxi_pc_activewindow"))
             or ( is_state('media_player.bedroom_chromecast', 'playing') and state_attr('media_player.bedroom_chromecast', 'is_volume_muted') == false )
             or is_state('binary_sensor.maxi_pc_microphoneactive', 'on')
             }}
      - name: Lola Went Out
        unique_id: "lola_went_out"
        state: >
            {% if (as_timestamp(now()) -  as_timestamp(states.sensor.front_door_camera_dog_count.last_changed  )) <  32400 %}
              on
            {% else %}
              off
            {% endif %}
  - sensor:
      - name: "Maxi Location"
        unique_id: "maxi_location" 
        state: >-            
            {% set braceletroom = states('sensor.b7bracelet1') %}
            {% set phoneroom = states('sensor.phone_fold4') %}
              {% if braceletroom == "not_home" %}      
                {% set room = phoneroom %}
              {% else %}
                {% set room = braceletroom %}
              {% endif %}
              {{ room }}
      - name: "current time"
        state: >-
          {{now().strftime('%H:%M %p')}}
      - name: "Closet Lights Brightness"
        state: >-
          {% if state_attr('light.group_closet_lights', 'brightness')  %}
            {{state_attr('light.group_closet_lights', 'brightness') }}
           {% else %}
              1
          {% endif %}
      - name: "Playing on Bedroom Speaker"
        state: >-
          {% if state_attr('media_player.bedroom_speaker', 'media_series_title') %}
            {{ state_attr('media_player.bedroom_speaker', 'media_series_title') }}
          {% elif  state_attr('media_player.bedroom_speaker', 'media_album_name') %}
           {{ state_attr('media_player.bedroom_speaker', 'media_title') }}  -  {{ state_attr('media_player.bedroom_speaker', 'media_album_name') }} by {{ state_attr('media_player.bedroom_speaker', 'media_artist') }}
          {% elif  state_attr('media_player.bedroom_speaker', 'media_title') %}
            {{ state_attr('media_player.bedroom_speaker', 'media_title') }}
           {% elif  state_attr('media_player.bedroom_speaker', 'app_name') %}
            {{ state_attr('media_player.bedroom_speaker', 'app_name') }}
          {% endif %}
      - name: "Playing on home group Speaker"
        state: >-
          {% if state_attr('media_player.group_home_group', 'media_series_title') %}
            {{ state_attr('media_player.group_home_group', 'media_series_title') }}
          {% elif  state_attr('media_player.group_home_group', 'media_album_name') %}
           {{ state_attr('media_player.group_home_group', 'media_title') }}  -  {{ state_attr('media_player.group_home_group', 'media_album_name') }} by {{ state_attr('media_player.group_home_group', 'media_artist') }}
          {% elif  state_attr('media_player.group_home_group', 'media_title') %}
            {{ state_attr('media_player.group_home_group', 'media_title') }}
           {% elif  state_attr('media_player.group_home_group', 'app_name') %}
            {{ state_attr('media_player.group_home_group', 'app_name') }}
          {% endif %}
      - name: "Maxis Current Game"
        unique_id: "currentgamemaxi" 
        state: >-
            {% if state_attr('sensor.maxi1134_8202', 'game') %}
            {{ state_attr('sensor.maxi1134_8202', 'game') }}
            {% elif  state_attr('sensor.steam_maxi', 'game') %}
            {{state_attr('sensor.steam_maxi', 'game')}}
            {% else %} idle
            {% endif %}
      - name: "Maxis Current Discord Game"
        state: >-
            {% if state_attr('sensor.maxi1134_8202', 'game') %}
            {{ state_attr('sensor.maxi1134_8202', 'game') }}
            {% else %}idle
            {% endif %}
      - name: "Maxis Current Steam Game"
        state: >-
            {% if  state_attr('sensor.steam_maxi', 'game') %}
            {{state_attr('sensor.steam_maxi', 'game')}}
            {% else %}idle
            {% endif %} 
      - name: "amount partners home"
        state: >-
            {# set the ammount of partners home #}
            {% if states('person.maximiliano') == "home" %}   {# If I am home, the amount should be zone.home -1 #}
              {% set partnershome = states('zone.home')  | int - 1  %}
            {% else %}{# If I am not home, the amount should be zone.home #}
              {% set partnershome = states('zone.home')  | int  %}
            {% endif %}
            {{partnershome | int }}

      - name: "amount friends home"
        state: >-
             {# Set friendshome to the amount of friends #}
             {% set friendshome = states('sensor.guest_wifi_count') | int - states('sensor.amount_partners_home') | int  %}
             {{friendshome}}


      - name: "amount people home"
        state: >-
             {# Set peoplehome to the amount of people #}
             {% set peoplehome = states('sensor.amount_friends_home') | int + states('sensor.amount_partners_home') | int  %} 
             {{peoplehome}}

      

      - name: "last active room"
        state: >-
            {% set rooms = ["office","bedroom","kitchen","hotbox","closet","livingroom","server"] %}
            {# Check for motionsensors in the rooms and then store them in a list #}
            {% set ns = namespace( active_motion_sensors = [] )%}
            {% for allowed_rooms in rooms %}
              {% for state in states.binary_sensor -%} 
                {% if allowed_rooms in state.entity_id and "binary_sensor.sensor_" in state.entity_id and "occupancy" in state.entity_id %} 
                  {% set sensor = {'entity_id': state.entity_id, 'last_changed': state.last_changed} %}
                    {% set ns.active_motion_sensors = ns.active_motion_sensors + [sensor] %}
                {%- endif %}
              {% endfor %}
            {% endfor %}



            {# sorts the motion sensor list to output the active room where there was last motion#}
            {% set sorted_sensors = ns.active_motion_sensors | sort(attribute='last_changed') %}
            {% set last_sensor = sorted_sensors | last %}

            {# set the lasttvactiveroom variant #}
            {% set room_before_split =last_sensor.entity_id | replace('binary_sensor.sensor_','')| replace('_motion_occupancy','')%}                            
            {% set lasttvactiveroom = room_before_split.split('_') | first %}     
            {{lasttvactiveroom}}

      - name: "active_sleeper_rooms"
        state: >-
            {% set ns = namespace(active_sleeper_rooms = []) %}  {# create a namespace object to store variables #}
            {%- for boolean in states.input_boolean -%} 
              {% if boolean.state == "on" and "input_boolean.sleeper_" in boolean.entity_id %} 
                {% set sensor = boolean.entity_id | replace('input_boolean.sleeper_in_','') %}
                  {% set ns.active_sleeper_rooms = ns.active_sleeper_rooms + [sensor] %}
              {%- endif %}
            {% endfor %}
            {{ ns.active_sleeper_rooms }}


            
      - name: "active_sleeper_amount"
        state: >-
            {{ states('sensor.active_sleeper_rooms') | wordcount }}





      - name: "Maxi current Activity"
        unique_id: maxi_current_activity
        state: >-
           {% set ns = namespace( activityname="unsure", mediaactiverooms=[],lasttvactiveroom = states('sensor.last_active_room'), active_sleepers_amount=0, allowed_ids=[],active_sleeper_rooms=[], motion_sensors=[], room = states.sensor.maxi_location.state, active_motion_sensors = [] ) %}  {# create a namespace object to store variables #}
            {% set room = states('sensor.maxi_location') %}

            {% set partnershome = states('sensor.amount_partners_home') | int  %}


            {# Set guesthome to the amount of people #}            
            {% set friendshome = states('sensor.amount_friends_home') | int  %}  

            {# Set peoplehome to the amount of people #}
            {% set peoplehome = states('sensor.amount_people_home')  %}  

            {% set ns.active_sleepers_amount = states('sensor.active_sleeper_amount') %}


            {# Check for active media in the rooms #}     
            {% for media_player in states.media_player -%} 
              {%- if  "plex" not in media_player.entity_id and "owntone" not in media_player.entity_id and "roku" not in media_player.entity_id and "speaker" not in media_player.entity_id -%}  
                {%- if media_player.state == 'playing' -%}
                {% set currentroomname = media_player.entity_id | replace('media_player.','') | replace('chromecast.','') %}
                  {%- set ns.mediaactiverooms = ns.mediaactiverooms + [currentroomname.split('_') | first] -%}   
                {%- endif -%}
              {%- endif -%}
            {% endfor %}      


            {% if states.binary_sensor.maxi_alone.state == "on" %}  {# if the maxi_alone sensor is on, indicating there is only maxi present #}
                {# Set the activity as gaming if a game is launched #}
                {% if states('binary_sensor.maxi_sleeping') == "on" %}          
                      {% set ns.activityname = "Sleeping"  %}          
                {% elif states('sensor.currentgamemaxi') != "idle" %}          
                      {% set ns.activityname = "Playing a video game" %}          
                {% elif room == "office" and states('sensor.maxi1134_8202') != "idle" %}         
                      {% set ns.activityname = "Using the computer " %}          
                {% elif ns.activityname == "unsure" %}    
                  {% if ns.mediaactiverooms | length > 0 %}                    
                  {# Check if I am in a room with mediaplayback #}
                  {% for activeroom in ns.mediaactiverooms %}
                    {% if ns.room in activeroom %}                                                       
                  {% set ns.activityname = "Watching TV in the " + room %}
                    {% endif %}
                  {% endfor %}          
                    {% if ns.activityname == "unsure" %}                        
                      {% set ns.activityname = "Watching TV in the " + ns.lasttvactiveroom %}
                      {% endif %}
                  {% endif %}
                {% endif %} 
            {% elif states.binary_sensor.maxi_alone.state == "off" %}  {# if the maxi_alone sensor is off, it indicates that there is more than maxi present #}
              {% if friendshome == 0 and partnershome > 0  %} {# If mor than one user is home, and no guest are there.  #}
                      {# Need to greatly expand this to know what we are doing #}
                    {% if states('binary_sensor.maxi_sleeping') == "on"%}        {# if maxi is sleeping #}   
                        {% set ns.activityname = "Sleeping"  %}             
                    {% elif ns.active_sleepers_amount < partnershome and states('binary_sensor.maxi_sleeping') == "off" %} {# Trigger if less people are asleep than are present and that is not maxi #}
                        {% if room in ns.mediaactiverooms %}
                            {% set ns.activityname = "Watching TV with girls in the " + room %}     
                        {% elif states('zone.home') == 2 and states('person.alexe') == home and room == "closet" and states('input_boolean.sleeper_in_closet') == "off" %}
                            {% set ns.activityname = "Playtime" %}                
                        {% elif states('zone.home') == 2 and states('person.myriam') == home and room == "closet" and states('input_boolean.sleeper_in_closet') == "off" %}
                            {% set ns.activityname = "Playtime" %}            {% else %}
                            {% set ns.activityname = "With girls in the " + room %}
                        {% endif %}
                    {% elif ns.active_sleepers_amount >=  partnershome  and states('binary_sensor.maxi_sleeping') == "off" %} {# if more sleepers than users and maxi is awake#}
                        {% if states('sensor.currentgamemaxi') != "idle" %}          
                          {% set ns.activityname = "Playing " +  states('sensor.currentgamemaxi') %}         
                        {% elif room == "office" and states('sensor.maxi1134_8202') != "idle" %}    
                          {% set ns.activityname = "Using the computer " %}
                        {% elif room in ns.mediaactiverooms %}
                            {% set ns.activityname = "Watching TV in the " + room %}  
                        {% else %}
                            {% set ns.activityname = "todetermine" %}  
                        {% endif %}  
                    {% endif %}        
              {% elif friendshome > 0   %}     {# if we have more people over than users #}{# assume a chilling #}
                        {% set ns.activityname = "Chilling" %}



              {% else %}
              {% endif %}                      
            {% else %}
              EDGECASE
            {% endif %}
            {{ns.activityname }}

      - name: "Where is maxi sleeping?"
        unique_id: maxi_sleeping_spot
        state: >-
          {% set ns = namespace(sleeper=0, sleeparraystates=[], allowed_ids=[], roomname="unsure", control='', sleeparray=[], motionarrays=[], motion_sensors=[]) %}  {# create a namespace object to store variables #}
          {% set room = states.sensor.maxi_location.state %}  {# get the current room sensor state #}

          {% if states.binary_sensor.maxi_alone.state == "on" %}  {# if the maxi_alone sensor is on, indicating there is only maxi present #}
            {% set sleeparray = states.input_boolean | selectattr('entity_id', 'contains', 'sleeper') | selectattr('state', 'eq', 'on') | map(attribute='entity_id') | list %}  {# get a list of all the input_boolean entities that are "sleeper" and are "on" #}
            {% if sleeparray | length > 1 %}  {# if there is more than one "sleeper" input_boolean that is "on" #}
              {% for input_boolean in states.input_boolean %}  {# loop through each input_boolean #}
                {% if input_boolean.entity_id in sleeparray %}  {# if the current input_boolean is in the list of "sleeper" input_booleans that are "on" #}
                  {% if room in input_boolean.entity_id %}  {# if the current input_boolean is in the current room #}
                    {% set ns.roomname = input_boolean.entity_id.split('_') | last %}  {# set the roomname to the last part of the entity_id, after splitting it by '_' #}
                  {% elif not room in input_boolean.entity_id and ns.roomname == "unsure" %}  {# if the current input_boolean is not in the current room and the previous if has not changed it#}
                          {% for name in sleeparray %}
                          {% set sleepername = name.split('_') | last %}      
                          {% set ns.allowed_ids = ns.allowed_ids + [sleepername] %}      
                          {% endfor %}      
                          {% for state in states.binary_sensor -%} 
                                  {%- if state.attributes.get('device_class') == 'motion' -%}
                                      {% for allowed_rooms in ns.allowed_ids %}                        
                                        {% set index = loop.index0 %}
                                        {% if ns.allowed_ids[index] in state.entity_id and "binary_sensor.sensor_" in state.entity_id %} 
                                          {% set sensor = {'entity_id': state.entity_id, 'last_changed': state.last_changed} %}
                                          {% set ns.motion_sensors = ns.motion_sensors + [sensor] %}
                                        {%- endif %}
                                      {% endfor %}
                                  {% endif %}
                          {% endfor %}            
                    {% set sorted_sensors = ns.motion_sensors | sort(attribute='last_changed') %}
                    {% set last_sensor = sorted_sensors | last %}
                    {% set room_before_split =last_sensor.entity_id | replace('binary_sensor.sensor_','')| replace('_motion_occupancy','')%}
                          
            {% set ns.lasttvactiveroom = states('sensor.last_active_room') %}   
                  {% endif %}
                {% endif %} 
              {% endfor %} 
            {% elif sleeparray | length == 1 %}  {# if there is only one "sleeper" input_boolean that is "on" #}
              {% set ns.roomname = sleeparray[0].split('_') | last %}  {# set the roomname to the last part of the entity_id of the only "sleeper" input_boolean that is "on" #}
            {% else %}  {# if there are no "sleeper" input_booleans that are "on" #}
              {% set ns.roomname = "unsure" %}  {# set the roomname to "unsure" #}
            {% endif %}   
          {% elif states.binary_sensor.maxi_alone.state == "off" %}  {# if the maxi_alone sensor is off, it indicates that there is more than maxi present #}
            {% for input_boolean in states.input_boolean %}
              {% if input_boolean.entity_id | contains('sleeper') and input_boolean.state == "on" and room in input_boolean.entity_id %}
                {% set ns.roomname = input_boolean.entity_id.split('_') | last %}
              {% endif %} 
            {% endfor %}  
          {% else %}
            EDGECASE
          {% endif %}
          {{ ns.roomname}}